{"ast":null,"code":"import Swal from \"sweetalert2\";\nimport { db } from \"../firebase/firebase-config\";\nimport { fileUpload } from \"../helpers/fileUpload\";\nimport { loadNotes } from \"../helpers/loadNotes\";\nimport { types } from \"../types/types\";\nexport const startNewNote = () => {\n  return async (dispatch, getState) => {\n    const {\n      uid\n    } = getState().auth;\n    const newNote = {\n      title: '',\n      body: '',\n      date: new Date().getTime()\n    };\n    const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\n    dispatch(activeNote(doc.id, newNote));\n    dispatch(addNewNote(doc.id, newNote));\n  };\n};\nexport const activeNote = (id, note) => ({\n  type: types.notesActive,\n  payload: {\n    id,\n    ...note\n  }\n});\nexport const addNewNote = (id, note) => ({\n  type: types.notesAddnew,\n  payload: {\n    id,\n    ...note\n  }\n});\nexport const startLoadingNotes = uid => {\n  return async dispatch => {\n    const notes = await loadNotes(uid);\n    dispatch(setNotes(notes));\n  };\n};\nexport const setNotes = notes => ({\n  type: types.notesLoad,\n  payload: notes\n});\nexport const startSaveNote = note => {\n  return async (dispatch, getState) => {\n    const {\n      uid\n    } = getState().auth;\n\n    if (!note.imageUrl) {\n      delete note.imageUrl;\n    }\n\n    const noteToFirestore = { ...note\n    };\n    delete noteToFirestore.id;\n    await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\n    dispatch(refreshNote(note.id, noteToFirestore));\n    Swal.fire('Saved: ', note.title, 'success');\n  };\n};\nexport const refreshNote = (id, note) => ({\n  type: types.notesUpdated,\n  payload: {\n    id,\n    note: {\n      id,\n      ...note\n    }\n  }\n});\nexport const startUpload = file => {\n  return async (dispatch, getState) => {\n    const {\n      active: activeNote\n    } = getState().notes;\n    Swal.fire({\n      title: 'Uploading...',\n      text: 'Please wait...',\n      allowOutsideClick: false,\n      onBeforeOpen: () => {\n        Swal.showLoading();\n      }\n    });\n    const fileUrl = await fileUpload(file);\n    activeNote.imageUrl = fileUrl;\n    dispatch(startSaveNote(activeNote));\n    Swal.close();\n  };\n};\nexport const startDaleting = id => {\n  return async (dispatch, getState) => {\n    const {\n      uid\n    } = getState().auth;\n    await db.doc(`${uid}/journal/notes/${id}`).delete();\n    dispatch(deleteNote(id));\n  };\n};\nexport const deleteNote = id => ({\n  type: types.notesDelete,\n  payload: id\n});\nexport const noteLogout = () => ({\n  type: types.notesLogoutCleaning\n});","map":{"version":3,"sources":["/home/ielizondo/Documents/git/Journal-app/src/acction/notes.js"],"names":["Swal","db","fileUpload","loadNotes","types","startNewNote","dispatch","getState","uid","auth","newNote","title","body","date","Date","getTime","doc","collection","add","activeNote","id","addNewNote","note","type","notesActive","payload","notesAddnew","startLoadingNotes","notes","setNotes","notesLoad","startSaveNote","imageUrl","noteToFirestore","update","refreshNote","fire","notesUpdated","startUpload","file","active","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startDaleting","delete","deleteNote","notesDelete","noteLogout","notesLogoutCleaning"],"mappings":"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","sourcesContent":["import Swal from \"sweetalert2\";\nimport { db } from \"../firebase/firebase-config\";\nimport { fileUpload } from \"../helpers/fileUpload\";\nimport { loadNotes } from \"../helpers/loadNotes\";\nimport { types } from \"../types/types\";\n\n\nexport const startNewNote = () => {\n    return async( dispatch, getState ) => {\n\n        const { uid } = getState().auth;\n        \n        const newNote = {\n            title: '',\n            body: '',\n            date: new Date().getTime()\n        }\n\n        const doc = await db.collection(`${ uid }/journal/notes`).add( newNote );\n        \n        dispatch( activeNote( doc.id, newNote ) );\n        dispatch( addNewNote( doc.id, newNote ) );\n    }\n}\n\nexport const activeNote = (id, note) => ({\n    type: types.notesActive,\n    payload: {\n        id,\n        ...note\n    }\n});\n\nexport const addNewNote = (id, note) => ({\n    type: types.notesAddnew,\n    payload: {\n        id,\n        ...note\n    }\n})\n\nexport const startLoadingNotes = ( uid ) => {\n    return async( dispatch ) => {\n\n        const notes = await loadNotes( uid );\n        dispatch( setNotes( notes ) );\n\n    }\n}\n\nexport const setNotes = ( notes ) => ({\n    type: types.notesLoad,\n    payload: notes\n});\n\nexport const startSaveNote = ( note ) => {\n    return async( dispatch, getState ) => {\n\n        const { uid } = getState().auth;\n\n        if ( !note.imageUrl ){\n            delete note.imageUrl;\n        }\n\n        const noteToFirestore = { ...note };\n        delete noteToFirestore.id;\n\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update( noteToFirestore );\n\n        dispatch( refreshNote( note.id, noteToFirestore ) );\n        Swal.fire('Saved: ',note.title, 'success');\n    }\n}\n\nexport const refreshNote = ( id, note ) => ({\n\n    type: types.notesUpdated,\n    payload:{\n        id,\n        note: {\n            id,\n            ...note\n        }\n    }\n});\n\nexport const startUpload = ( file ) => {\n    return async ( dispatch, getState ) => {\n\n        const {active:activeNote } = getState().notes;\n\n        Swal.fire({\n            title: 'Uploading...',\n            text:'Please wait...',\n            allowOutsideClick: false,\n            onBeforeOpen: () => {\n                Swal.showLoading();\n            }\n        });\n\n        const fileUrl = await fileUpload(file);\n        activeNote.imageUrl = fileUrl;\n\n        dispatch( startSaveNote(activeNote))\n\n        Swal.close();\n\n    }\n}\n\nexport const startDaleting = (id) => {\n    return async( dispatch, getState ) =>{\n        \n        const { uid } = getState().auth;\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\n\n        dispatch( deleteNote(id) );\n    }\n}\n\nexport const deleteNote = (id) => ({\n    type: types.notesDelete,\n    payload: id\n});\n\nexport const noteLogout = () =>({\n    type: types.notesLogoutCleaning\n});"]},"metadata":{},"sourceType":"module"}