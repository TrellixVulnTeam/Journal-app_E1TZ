{"ast":null,"code":"var _jsxFileName = \"/home/ielizondo/Documents/git/Journal-app/src/components/notes/NoteScrem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { activeNote, startDaleting } from '../../acction/notes';\nimport { useForm } from '../../hooks/useForm';\nimport { NotesAppBar } from './NotesAppBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NoteScrem = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    active: note\n  } = useSelector(state => state.notes);\n  const [formValues, handleInputChange, reset] = useForm(note);\n  const {\n    body,\n    title,\n    id\n  } = formValues;\n  const activeId = useRef(note.id);\n  useEffect(() => {\n    if (note.id !== activeId.current) {\n      reset(note);\n      activeId.current = note.id;\n    }\n  }, [reset, note]);\n  useEffect(() => {\n    dispatch(activeNote(formValues.id, { ...formValues\n    }));\n  }, [formValues, dispatch]);\n\n  const handleDelete = () => {\n    dispatch(startDaleting(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes__main-content\",\n    children: [/*#__PURE__*/_jsxDEV(NotesAppBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        test: \"text\",\n        name: \"title\",\n        placeholder: \"Some awesome title\",\n        className: \"notes__title-input\",\n        autoComplete: \"off\",\n        value: title,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"body\",\n        placeholder: \"What happend today\",\n        className: \"notes__textarea\",\n        onChange: handleInputChange,\n        value: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), note.imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notes__image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: note.imageUrl,\n          alt: \"imagen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: handleDelete,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NoteScrem, \"NAVuRQBUonE/dYHolMtUu2+HuOQ=\", false, function () {\n  return [useDispatch, useSelector, useForm];\n});\n\n_c = NoteScrem;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteScrem\");","map":{"version":3,"sources":["/home/ielizondo/Documents/git/Journal-app/src/components/notes/NoteScrem.js"],"names":["React","useEffect","useRef","useDispatch","useSelector","activeNote","startDaleting","useForm","NotesAppBar","NoteScrem","dispatch","active","note","state","notes","formValues","handleInputChange","reset","body","title","id","activeId","current","handleDelete","imageUrl"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,qBAA1C;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAE3B,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAM;AAAEQ,IAAAA,MAAM,EAACC;AAAT,MAAkBR,WAAW,CAAES,KAAK,IAAIA,KAAK,CAACC,KAAjB,CAAnC;AACA,QAAM,CAAEC,UAAF,EAAcC,iBAAd,EAAiCC,KAAjC,IAA2CV,OAAO,CAACK,IAAD,CAAxD;AACA,QAAM;AAAEM,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAAqBL,UAA3B;AAEA,QAAMM,QAAQ,GAAGnB,MAAM,CAAEU,IAAI,CAACQ,EAAP,CAAvB;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGW,IAAI,CAACQ,EAAL,KAAYC,QAAQ,CAACC,OAAxB,EAAgC;AAC5BL,MAAAA,KAAK,CAACL,IAAD,CAAL;AACAS,MAAAA,QAAQ,CAACC,OAAT,GAAmBV,IAAI,CAACQ,EAAxB;AACH;AAEJ,GANQ,EAMN,CAACH,KAAD,EAAQL,IAAR,CANM,CAAT;AAQAX,EAAAA,SAAS,CAAC,MAAM;AAEZS,IAAAA,QAAQ,CAAEL,UAAU,CAACU,UAAU,CAACK,EAAZ,EAAgB,EAAC,GAAGL;AAAJ,KAAhB,CAAZ,CAAR;AAEH,GAJQ,EAIN,CAACA,UAAD,EAAaL,QAAb,CAJM,CAAT;;AAMA,QAAMa,YAAY,GAAG,MAAM;AACvBb,IAAAA,QAAQ,CAAEJ,aAAa,CAACc,EAAD,CAAf,CAAR;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,WAAW,EAAC,oBAHhB;AAII,QAAA,SAAS,EAAC,oBAJd;AAKI,QAAA,YAAY,EAAC,KALjB;AAMI,QAAA,KAAK,EAAED,KANX;AAOI,QAAA,QAAQ,EAAKH;AAPjB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAYI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,oBAFhB;AAGI,QAAA,SAAS,EAAC,iBAHd;AAII,QAAA,QAAQ,EAAKA,iBAJjB;AAKI,QAAA,KAAK,EAAIE;AALb;AAAA;AAAA;AAAA;AAAA,cAZJ,EAsBSN,IAAI,CAACY,QAAN,iBAEQ;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACI;AACI,UAAA,GAAG,EAAIZ,IAAI,CAACY,QADhB;AAEI,UAAA,GAAG,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAxBhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAqCI;AACI,MAAA,SAAS,EAAC,gBADd;AAEI,MAAA,OAAO,EAAGD,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+CH,CA3EM;;GAAMd,S;UAEQN,W,EAEOC,W,EACyBG,O;;;KALxCE,S","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { activeNote, startDaleting } from '../../acction/notes';\nimport { useForm } from '../../hooks/useForm';\nimport { NotesAppBar } from './NotesAppBar'\n\nexport const NoteScrem = () => {\n\n    const dispatch = useDispatch()\n\n    const { active:note } = useSelector( state => state.notes );\n    const [ formValues, handleInputChange, reset ] = useForm(note);\n    const { body, title, id} = formValues;\n\n    const activeId = useRef( note.id );\n\n    useEffect(() => {\n        if(note.id !== activeId.current){\n            reset(note);\n            activeId.current = note.id;\n        }\n        \n    }, [reset, note])\n\n    useEffect(() => {\n\n        dispatch( activeNote(formValues.id, {...formValues}) )\n       \n    }, [formValues, dispatch])\n\n    const handleDelete = () => {\n        dispatch( startDaleting(id) );\n    }\n\n    return (\n        <div className=\"notes__main-content\">\n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n                \n                <input\n                    test=\"text\"\n                    name=\"title\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                    value={title}\n                    onChange = { handleInputChange }\n                />\n\n                <textarea\n                    name=\"body\"\n                    placeholder=\"What happend today\" \n                    className=\"notes__textarea\"\n                    onChange = { handleInputChange }\n                    value = {body}\n                ></textarea>\n                \n                {\n                    \n                    (note.imageUrl) &&\n                        (\n                            <div className=\"notes__image\">\n                                <img \n                                    src= { note.imageUrl }\n                                    alt=\"imagen\" \n                                />\n                            </div>\n                        )\n                }\n            </div>\n            \n            <button\n                className='btn btn-danger'\n                onClick={ handleDelete }\n            >\n                Delete\n            </button>\n\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}