{"ast":null,"code":"var _jsxFileName = \"/home/ielizondo/Documents/Documentacion React/react/06-journal-app/src/components/auth/LoginScrem.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport validator from 'validator';\nimport { startLoginEmailPassword, starGoogleLogin } from '../../acction/auth';\nimport { setError } from '../../acction/ui';\nimport { useForm } from '../../hooks/useForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const LoginScrem = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    msgEror\n  } = useSelector(state => state.ui);\n  const [formValues, handleInputChange] = useForm({\n    email: 'email@example.com',\n    password: '123456'\n  });\n  const {\n    email,\n    password\n  } = formValues;\n\n  const handleLogin = e => {\n    e.preventDefault();\n\n    if (isFormValid()) {\n      dispatch(startLoginEmailPassword(email, password));\n    }\n  };\n\n  const isFormValid = () => {\n    if (!validator.isEmail(email)) {\n      dispatch(setError('Email is not valid'));\n      return false;\n    } else if (password.length < 5) {\n      dispatch(setError('The password is not valid'));\n      return false;\n    }\n  };\n\n  const handleGoogleLogin = () => {\n    dispatch(starGoogleLogin());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"auth__title\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [msgEror && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth__alert-error\",\n        children: msgEror\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Email\",\n        name: \"email\",\n        className: \"auth__input\",\n        autoComplete: \"off\",\n        value: email,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        className: \"auth__input\",\n        value: password,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-priamry btn-block\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth__social-networks\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Login with social networks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"google-btn\",\n          onClick: handleGoogleLogin,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"google-icon-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"google-icon\",\n              src: \"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\",\n              alt: \"google button\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"btn-text\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Sign in with google\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/auth/register\",\n        className: \"links\",\n        children: \"Create new account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LoginScrem, \"1B1ZWKaZRiMb1UO2rFWwLv1XWoI=\", false, function () {\n  return [useDispatch, useSelector, useForm];\n});\n\n_c = LoginScrem;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScrem\");","map":{"version":3,"sources":["/home/ielizondo/Documents/Documentacion React/react/06-journal-app/src/components/auth/LoginScrem.js"],"names":["React","useDispatch","useSelector","Link","validator","startLoginEmailPassword","starGoogleLogin","setError","useForm","LoginScrem","dispatch","msgEror","state","ui","formValues","handleInputChange","email","password","handleLogin","e","preventDefault","isFormValid","isEmail","length","handleGoogleLogin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport validator from 'validator';\n\nimport { startLoginEmailPassword, starGoogleLogin } from '../../acction/auth';\nimport { setError } from '../../acction/ui';\nimport { useForm } from '../../hooks/useForm';\n\nexport const LoginScrem = () => {\n\n    const dispatch = useDispatch();\n    const {msgEror} = useSelector( state => state.ui );\n\n    const [ formValues, handleInputChange ] = useForm({\n        email: 'email@example.com',\n        password: '123456'\n    });\n\n    const { email, password } = formValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        if(isFormValid()){\n            dispatch( startLoginEmailPassword(email, password));\n        }\n    }\n\n    const isFormValid = () => {\n        if(!validator.isEmail(email)){\n            dispatch(setError('Email is not valid'));\n            return false;\n        }else if(password.length < 5){\n            dispatch(setError('The password is not valid'));\n            return false;\n        }\n    }\n\n    const handleGoogleLogin = () => {\n        dispatch( starGoogleLogin() );\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Login</h3>\n\n            <form onSubmit={ handleLogin }>\n            \n            {\n                msgEror && \n                (\n                    <div className=\"auth__alert-error\">\n                        { msgEror }\n                    </div>\n                )\n            }\n            \n            <input \n                type=\"text\"\n                placeholder=\"Email\"\n                name=\"email\"\n                className=\"auth__input\"\n                autoComplete=\"off\"\n                value = { email }\n                onChange={ handleInputChange }\n                />\n\n            <input \n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                className=\"auth__input\"\n                value = { password }\n                onChange = { handleInputChange }\n                />\n\n            <button\n                type=\"submit\"\n                className=\"btn btn-priamry btn-block\"   \n            >\n                Login\n            </button>\n\n                <div className=\"auth__social-networks\">\n                    <p>Login with social networks</p>\n                    <div \n                        className=\"google-btn\"\n                        onClick={ handleGoogleLogin }\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n\n                <Link \n                    to=\"/auth/register\"\n                    className=\"links\"\n                >\n                    Create new account\n                </Link>\n            </form>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}