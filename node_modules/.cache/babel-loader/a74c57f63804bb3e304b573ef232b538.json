{"ast":null,"code":"import { types } from '../types/types';\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\nimport { finishLoading, startLoading } from './ui';\nexport const startLoginEmailPassword = (email, password) => {\n  return dispatch => {\n    dispatch(startLoading());\n    firebase.auth().signInWithEmailAndPassword(email, password).then(({\n      user\n    }) => {\n      dispatch(login(user.uid, user.displayName));\n      dispatch(finishLoading());\n    });\n  };\n};\nexport const starRegisterWithEmailPasswordName = (email, password, name) => {\n  return dispatch => {\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(async ({\n      user\n    }) => {\n      await user.updateProfile({\n        displayName: name\n      });\n      dispatch(login(user.uid, user.displayName));\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n};\nexport const starGoogleLogin = () => {\n  return dispatch => {\n    firebase.auth().signInWithPopup(googleAuthProvider).then(({\n      user\n    }) => {\n      dispatch(login(user.uid, user.displayName));\n    });\n  };\n};\nexport const login = (uid, displayName) => ({\n  type: types.login,\n  payload: {\n    uid,\n    displayName\n  }\n});","map":{"version":3,"sources":["/home/ielizondo/Documents/Documentacion React/react/06-journal-app/src/acction/auth.js"],"names":["types","firebase","googleAuthProvider","finishLoading","startLoading","startLoginEmailPassword","email","password","dispatch","auth","signInWithEmailAndPassword","then","user","login","uid","displayName","starRegisterWithEmailPasswordName","name","createUserWithEmailAndPassword","updateProfile","catch","error","console","log","starGoogleLogin","signInWithPopup","type","payload"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,SAASC,QAAT,EAAmBC,kBAAnB,QAA6C,6BAA7C;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,MAA5C;AAKA,OAAO,MAAMC,uBAAuB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAExD,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACJ,YAAY,EAAb,CAAR;AACCH,IAAAA,QAAQ,CAACQ,IAAT,GAAgBC,0BAAhB,CAA2CJ,KAA3C,EAAkDC,QAAlD,EACII,IADJ,CACU,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AACjBJ,MAAAA,QAAQ,CAACK,KAAK,CAACD,IAAI,CAACE,GAAN,EAAWF,IAAI,CAACG,WAAhB,CAAN,CAAR;AACAP,MAAAA,QAAQ,CAACL,aAAa,EAAd,CAAR;AACH,KAJJ;AAKJ,GAPD;AAQH,CAVM;AAYP,OAAO,MAAMa,iCAAiC,GAAG,CAACV,KAAD,EAAQC,QAAR,EAAkBU,IAAlB,KAA2B;AACxE,SAAQT,QAAD,IAAc;AACjBP,IAAAA,QAAQ,CAACQ,IAAT,GAAgBS,8BAAhB,CAA+CZ,KAA/C,EAAsDC,QAAtD,EACKI,IADL,CACW,OAAM;AAAEC,MAAAA;AAAF,KAAN,KAAmB;AAEtB,YAAMA,IAAI,CAACO,aAAL,CAAmB;AAACJ,QAAAA,WAAW,EAAEE;AAAd,OAAnB,CAAN;AACAT,MAAAA,QAAQ,CACJK,KAAK,CAAED,IAAI,CAACE,GAAP,EAAYF,IAAI,CAACG,WAAjB,CADD,CAAR;AAGH,KAPL,EAOOK,KAPP,CAOcC,KAAK,IAAI;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KATL;AAUH,GAXD;AAYH,CAbM;AAeP,OAAO,MAAMG,eAAe,GAAG,MAAM;AACjC,SAAQhB,QAAD,IAAc;AAEjBP,IAAAA,QAAQ,CAACQ,IAAT,GAAgBgB,eAAhB,CAAgCvB,kBAAhC,EACKS,IADL,CACW,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AACjBJ,MAAAA,QAAQ,CACJK,KAAK,CAAED,IAAI,CAACE,GAAP,EAAYF,IAAI,CAACG,WAAjB,CADD,CAAR;AAGH,KALL;AAMH,GARD;AASH,CAVM;AAYP,OAAO,MAAMF,KAAK,GAAG,CAACC,GAAD,EAAMC,WAAN,MAAuB;AACxCW,EAAAA,IAAI,EAAE1B,KAAK,CAACa,KAD4B;AAExCc,EAAAA,OAAO,EAAE;AACLb,IAAAA,GADK;AAELC,IAAAA;AAFK;AAF+B,CAAvB,CAAd","sourcesContent":["import { types } from '../types/types';\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\nimport { finishLoading, startLoading } from './ui';\n\n\n\n\nexport const startLoginEmailPassword = (email, password) => {\n   \n    return (dispatch) => {\n        dispatch(startLoading());\n         firebase.auth().signInWithEmailAndPassword(email, password)\n            .then( ({ user }) => {\n                dispatch(login(user.uid, user.displayName));\n                dispatch(finishLoading());\n            })\n    }\n}\n\nexport const starRegisterWithEmailPasswordName = (email, password, name) => {\n    return (dispatch) => {\n        firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then( async({ user }) => {\n\n                await user.updateProfile({displayName: name})\n                dispatch(\n                    login( user.uid, user.displayName)\n                )\n            }).catch( error => {\n                console.log(error);\n            })\n    }\n}\n\nexport const starGoogleLogin = () => {\n    return (dispatch) => {\n\n        firebase.auth().signInWithPopup(googleAuthProvider)\n            .then( ({ user }) => {\n                dispatch(\n                    login( user.uid, user.displayName)\n                )\n            });\n    }\n}\n\nexport const login = (uid, displayName) => ({\n    type: types.login,\n    payload: {\n        uid,\n        displayName\n    }\n})"]},"metadata":{},"sourceType":"module"}