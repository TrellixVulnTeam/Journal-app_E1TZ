{"ast":null,"code":"/*\n * {\n    * notes: [],\n    * active: null,\n    * active: {\n    *   id: 'bdsvjkebrfugkberldf123146654',\n    *   title: '',\n    *   doby: '',\n    *   imageUrl: '',\n    *   date:121544535456135\n    * }\n * }\n */\nimport { types } from '../types/types';\nconst initialState = {\n  notes: [],\n  active: null\n};\nexport const notesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.notesActive:\n      return { ...state,\n        active: { ...action.payload\n        }\n      };\n\n    case types.notesLoad:\n      return { ...state,\n        notes: [...action.payload]\n      };\n\n    case types.notesUpdated:\n      return { ...state,\n        notes: state.notes.map(note => note.id === action.payload.id ? action.payload.note : note)\n      };\n\n    case types.notesDelete:\n      return { ...state,\n        active: null,\n        notes: state.notes.filter(note => note.id !== action.payload)\n      };\n\n    case types.notesLogoutCleaning:\n      return { ...state,\n        active: null,\n        notes: []\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/ielizondo/Documents/Documentacion React/react/06-journal-app/src/reducers/notesReducers.js"],"names":["types","initialState","notes","active","notesReducer","state","action","type","notesActive","payload","notesLoad","notesUpdated","map","note","id","notesDelete","filter","notesLogoutCleaning"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,SAASA,KAAT,QAAsB,gBAAtB;AAED,MAAMC,YAAY,GAAG;AAChBC,EAAAA,KAAK,EAAE,EADS;AAEhBC,EAAAA,MAAM,EAAE;AAFQ,CAArB;AAKA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAE1D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,KAAK,CAACQ,WAAX;AACI,aAAO,EACH,GAAGH,KADA;AAEHF,QAAAA,MAAM,EAAE,EACJ,GAAGG,MAAM,CAACG;AADN;AAFL,OAAP;;AAMJ,SAAKT,KAAK,CAACU,SAAX;AACI,aAAO,EACH,GAAGL,KADA;AAEHH,QAAAA,KAAK,EAAE,CAAE,GAAGI,MAAM,CAACG,OAAZ;AAFJ,OAAP;;AAIJ,SAAKT,KAAK,CAACW,YAAX;AACI,aAAO,EACH,GAAGN,KADA;AAEHH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYU,GAAZ,CACHC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACG,OAAP,CAAeK,EAA3B,GACHR,MAAM,CAACG,OAAP,CAAeI,IADZ,GAEHA,IAHF;AAFJ,OAAP;;AAQJ,SAAKb,KAAK,CAACe,WAAX;AACI,aAAO,EACH,GAAGV,KADA;AAEHF,QAAAA,MAAM,EAAC,IAFJ;AAGHD,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYc,MAAZ,CAAoBH,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACG,OAA/C;AAHJ,OAAP;;AAKJ,SAAKT,KAAK,CAACiB,mBAAX;AACI,aAAO,EACH,GAAGZ,KADA;AAEHF,QAAAA,MAAM,EAAC,IAFJ;AAGHD,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ;AACI,aAAOG,KAAP;AAnCR;AAqCH,CAvCM","sourcesContent":["/*\n * {\n    * notes: [],\n    * active: null,\n    * active: {\n    *   id: 'bdsvjkebrfugkberldf123146654',\n    *   title: '',\n    *   doby: '',\n    *   imageUrl: '',\n    *   date:121544535456135\n    * }\n * }\n */\n import { types } from '../types/types'; \n\nconst initialState = {\n     notes: [],\n     active: null\n}\n\nexport const notesReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case types.notesActive: \n            return {\n                ...state,\n                active: {\n                    ...action.payload\n                }\n            }\n        case types.notesLoad:\n            return {\n                ...state,\n                notes: [ ...action.payload ]\n            }\n        case types.notesUpdated: \n            return {\n                ...state,\n                notes: state.notes.map(\n                    note => note.id === action.payload.id\n                        ?action.payload.note\n                        :note\n                )\n            }\n        case types.notesDelete: \n            return {\n                ...state,\n                active:null,\n                notes: state.notes.filter( note => note.id !== action.payload )\n            }\n        case types.notesLogoutCleaning: \n            return {\n                ...state,\n                active:null,\n                notes: [ ]\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}